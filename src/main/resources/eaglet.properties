##############################################################################
# This is the properties file of the eaglet project. It mainly contains the  # 
# paths to the needed files of the datasets and the annotators               #
##############################################################################

# In the following file we have stored our keys for several annotator services
# (since we don't want to upload them ;-) ). You can simply do the same by
# searching for the relevant properties in this file (they might be commented
# out), create a gerbil_keys.properties file and set them there. Otherwise you
# can simply comment out this line.
include = gerbil_keys.properties

# In this files, the annotators and datasets are defined
include = annotators.properties
include = datasets.properties

# In this file, the properties of the entity checking are defined
include = entity_checking.properties

# If you have downloaded the complete package of datasets and annotators data
# you only have to extract them to a folder and set the path to this folder
# here
org.aksw.gerbil.DataPath=gerbil_data
org.aksw.eaglet.DataPath=eaglet_data
pipe_result_path=eaglet_data/OKE 2015 Task 1 gold standard sample-result-nif.ttl
dataset_path=

### Database properties
eaglet.jdbc.driverClassName		= org.hsqldb.jdbc.JDBCDriver
eaglet.jdbc.file				= ${org.aksw.eaglet.DataPath}/database/eaglet.db
# the time a experiment task is seen as up-to-date (7 days = 7*24*60*60*1000 ms)

### HTTP communication configuration
# The maximum time the system waits for an HTTP based annotator to respond (in ms)
# 300,000 = 5 minutes
org.aksw.gerbil.annotator.http.HttpManagement.maxWaitingTime=300000
# Time interval at which a thread checks the current run times of HTTP requests (in ms)
org.aksw.gerbil.annotator.http.HttpManagement.checkInterval=10000

### Annotator output storage
org.aksw.gerbil.execute.AnnotatorOutputWriter.printAnnotatorResults=true
org.aksw.gerbil.execute.AnnotatorOutputWriter.outputDirectory=${org.aksw.gerbil.DataPath}/output

